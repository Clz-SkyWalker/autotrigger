// Code generated by goctl. DO NOT EDIT!
// Source: log.proto

package log

import (
	"context"

	"autotrigger/log/rpc/types/log"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MyErrStruct = log.MyErrModel

	Log interface {
		//  发送日志
		SendLog(ctx context.Context, in *MyErrStruct, opts ...grpc.CallOption) (*MyErrStruct, error)
	}

	defaultLog struct {
		cli zrpc.Client
	}
)

func NewLog(cli zrpc.Client) Log {
	return &defaultLog{
		cli: cli,
	}
}

//  发送日志
func (m *defaultLog) SendLog(ctx context.Context, in *MyErrStruct, opts ...grpc.CallOption) (*MyErrStruct, error) {
	client := log.NewLogClient(m.cli.Conn())
	return client.SendLog(ctx, in, opts...)
}
